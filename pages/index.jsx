import Head from "next/head";
import Films from "../components/Films";
import Main from "../components/Main";
import { H1Wrap } from "../components/H1";
import { TextWrap } from "../components/Text";
import styled from "styled-components";
import { rem } from "polished";
import Search from "../components/Search";
import { useState, useEffect } from "react";
import Tabs from "../components/Tabs";
import axios from "axios";
import Pagination from "../components/Pagination";

export default function Home({ data }) {
  const [isLoading, setIsLoading] = useState(true);
  const [search, setSearch] = useState("");
  const [films, setFilms] = useState("");
  const [page, setPage] = useState(1);
  const [tabValue, setTabValue] = useState("All");
  const findFilm = films ? films.movies.length : data.movies.length;

  useEffect(() => {
    setIsLoading(true);
    axios
      .get(
        `${process.env.NEXT_PUBLIC_API_URL}?page=${page}&search=${search}&category=${tabValue}`
      )
      .then(({ data }) => setFilms(data))
      .catch((err) => console.log(err))
      .finally(() => setIsLoading(false));
  }, [search, tabValue, page]);

  return (
    <>
      <Head>
        <title>Movie</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Main>
        <HomeTitle>MaileHereko</HomeTitle>
        <HomeText>
          List of movies and TV Shows, I,{" "}
          <HomeTextPrimary>Pramod Poudel</HomeTextPrimary> have watched till
          date. Explore what I have watched and also feel free to make a
          suggestion. ðŸ˜‰
        </HomeText>
        <Search search={search} setSearch={setSearch} />
        <Tabs setTabValue={setTabValue} />
        <HomeSubtitle>
          {tabValue} <HomeSubtitleCount>({films.total})</HomeSubtitleCount>
        </HomeSubtitle>
        {findFilm && !isLoading ? (
          <Films data={films ? films : data} />
        ) : (
          <FilmNotFound>
            {isLoading ? "Ð˜Ð´ÐµÑ‚ Ð·Ð°Ð³Ñ€ÑƒÐ·ÐºÐ°..." : "Ð¤Ð¸Ð»ÑŒÐ¼ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½"}
          </FilmNotFound>
        )}
        {findFilm !== 0 && !isLoading && (
          <Pagination
            total={findFilm ? films.total : data.total}
            page={page}
            limit={findFilm ? films.limit : data.limit}
            setPage={setPage}
          />
        )}
      </Main>
    </>
  );
}

const HomeTitle = styled(H1Wrap)`
  margin-bottom: ${rem(16)};
`;

const HomeSubtitle = styled.p`
  margin-bottom: ${rem(24)};
  font-weight: 600;
  font-size: ${rem(32)};
  line-height: 125%;
  letter-spacing: -0.02em;
  color: #767e94;
`;

const HomeSubtitleCount = styled.span`
  font-weight: 400;
  font-size: ${rem(16)};
  line-height: 150%;
`;

const HomeText = styled(TextWrap)`
  margin-bottom: ${rem(24)};
`;

const HomeTextPrimary = styled.span`
  display: inline;
  color: ${(props) => props.theme.colors.primary};
`;

const FilmNotFound = styled.h2`
  margin-bottom: ${rem(50)};
`;

export async function getStaticProps() {
  return fetch(`${process.env.API_KEY}`)
    .then((res) => res.json())
    .then((data) => {
      return {
        props: { data },
      };
    });
}
